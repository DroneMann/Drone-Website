 document.addEventListener('DOMContentLoaded', () => { const contactForm = document.getElementById('contact-form'); contactForm.setAttribute('action', 'https: contactForm.setAttribute('method', 'POST'); const formSubmitConfig = [ { name: '_subject', value: 'New Drone Photography Request' }, { name: '_captcha', value: 'true' }, { name: '_template', value: 'table' }, { name: '_next', value: window.location.href + '?submission=success' } ]; formSubmitConfig.forEach(config => { const hiddenField = document.createElement('input'); hiddenField.type = 'hidden'; hiddenField.name = config.name; hiddenField.value = config.value; contactForm.appendChild(hiddenField); }); initializeDatePicker(); setupFormValidation(); checkForSuccessMessage(); }); function initializeDatePicker() { const dateField = document.getElementById('date'); const today = new Date(); const formattedDate = today.toISOString().split('T')[0]; dateField.setAttribute('min', formattedDate); dateField.addEventListener('change', () => { validateField(dateField); }); } function setupFormValidation() { const contactForm = document.getElementById('contact-form'); const submitButton = contactForm.querySelector('.submit-button'); const nameField = document.getElementById('name'); const emailField = document.getElementById('email'); const phoneField = document.getElementById('phone'); const addressField = document.getElementById('address'); const dateField = document.getElementById('date'); const fields = [nameField, emailField, phoneField, addressField, dateField]; fields.forEach(field => { field.addEventListener('input', () => { validateField(field); updateSubmitButtonState(); }); field.addEventListener('blur', () => { validateField(field); updateSubmitButtonState(); }); }); contactForm.addEventListener('submit', (event) => { event.preventDefault(); let isValid = true; fields.forEach(field => { if (!validateField(field)) { isValid = false; } }); if (isValid) { contactForm.submit(); } }); updateSubmitButtonState(); } function validateField(field) { clearErrorForField(field); let isValid = true; const value = field.value.trim(); if (field.hasAttribute('required') && value === '') { showError(field, 'This field is required'); isValid = false; } else { switch (field.id) { case 'email': if (value !== '' && !isValidEmail(value)) { showError(field, 'Please enter a valid email address'); isValid = false; } break; case 'phone': if (value !== '' && !isValidPhone(value)) { showError(field, 'Please enter a valid phone number'); isValid = false; } break; case 'address': if (value !== '' && !isWisconsinAddress(value)) { showError(field, 'Address must be in Wisconsin'); isValid = false; } break; case 'date': if (value !== '') { const selectedDate = new Date(value); const today = new Date(); today.setHours(0, 0, 0, 0); if (selectedDate < today) { showError(field, 'Please select a future date'); isValid = false; } } break; } } if (isValid) { field.classList.remove('invalid'); field.classList.add('valid'); } else { field.classList.remove('valid'); field.classList.add('invalid'); } return isValid; } function showError(field, message) { const errorDiv = document.createElement('div'); errorDiv.className = 'error-message'; errorDiv.textContent = message; errorDiv.style.color = '#ff6b6b'; errorDiv.style.fontSize = '0.875rem'; errorDiv.style.marginTop = '0.25rem'; field.parentNode.insertBefore(errorDiv, field.nextSibling); } function clearErrorForField(field) { const errorMessage = field.parentNode.querySelector('.error-message'); if (errorMessage) { errorMessage.remove(); } } function updateSubmitButtonState() { const contactForm = document.getElementById('contact-form'); const submitButton = contactForm.querySelector('.submit-button'); const requiredFields = contactForm.querySelectorAll('[required]'); let allFilled = true; requiredFields.forEach(field => { if (field.value.trim() === '') { allFilled = false; } }); submitButton.disabled = !allFilled; if (allFilled) { submitButton.style.opacity = '1'; submitButton.style.cursor = 'pointer'; } else { submitButton.style.opacity = '0.7'; submitButton.style.cursor = 'not-allowed'; } } function checkForSuccessMessage() { const urlParams = new URLSearchParams(window.location.search); if (urlParams.get('submission') === 'success') { const contactSection = document.getElementById('contact'); const successMessage = document.createElement('div'); successMessage.className = 'success-message'; successMessage.innerHTML = ` <div style="background-color: #d4edda; color: #155724; padding: 1rem; border-radius: 4px; margin-bottom: 1rem; text-align: center;"> <h3 style="color: #155724;">Thank you for your submission!</h3> <p>We've received your request and will contact you shortly.</p> </div> `; const container = contactSection.querySelector('.container'); container.insertBefore(successMessage, container.firstChild); successMessage.scrollIntoView({ behavior: 'smooth' }); const url = new URL(window.location); url.searchParams.delete('submission'); window.history.replaceState({}, '', url); } } function isValidEmail(email) { const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/; return emailRegex.test(email); } function isValidPhone(phone) { const phoneRegex = /^(\+\d{1,2}\s?)?\(?\d{3}\)?[\s.-]?\d{3}[\s.-]?\d{4}$/; return phoneRegex.test(phone); } function isWisconsinAddress(address) { const wisconsinRegex = /\b(wisconsin|wi)\b/i; return wisconsinRegex.test(address); } const formStyles = document.createElement('style'); formStyles.textContent = ` .form-group input.valid, .form-group textarea.valid { border-color: #28a745; } .form-group input.invalid, .form-group textarea.invalid { border-color: #ff6b6b; } `; document.head.appendChild(formStyles);